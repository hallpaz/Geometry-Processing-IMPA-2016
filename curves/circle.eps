%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Hallison da Paz
%%Title: Window .4349376888
%%CreationDate: Tue Mar 22 10:40:33 2016
%%BoundingBox: -53 59 666 734
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%EndComments

%%BeginProlog
/CurrentEncoding [
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
/parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
/zero/one/two/three/four/five/six/seven
/eight/nine/colon/semicolon/less/equal/greater/question
/at/A/B/C/D/E/F/G
/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W
/X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
/grave/a/b/c/d/e/f/g
/h/i/j/k/l/m/n/o
/p/q/r/s/t/u/v/w
/x/y/z/braceleft/bar/braceright/asciitilde/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/space/space/space/space/space/space/space
/space/exclamdown/cent/sterling/currency/yen/brokenbar/section
/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis
] def

50 dict begin
% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id$

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def


/cstringshow {
    {
	dup type /stringtype eq
	{ show } { glyphshow }
	ifelse
    }
    forall
} bind def



/cstringwidth {
    0 exch 0 exch
    {
	dup type /stringtype eq
	{ stringwidth } { 
	    currentfont /Encoding get exch 1 exch put (\001) stringwidth 
        }
	ifelse 
	exch 3 1 roll add 3 1 roll add exch
    }
    forall
} bind def

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to current system encoding.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding CurrentEncoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	cstringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup cstringwidth pop
	justify neg mul 0 moveto
	stipple {
	   
 
	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		dup type /stringtype eq {
		    % This segment is a string.
		    {
		        char 0 3 -1 roll put
		        currentpoint
		        gsave
		        char true charpath clip StippleText
		        grestore
		        char stringwidth translate
		        moveto
		    } forall
		} {
		    % This segment is glyph name
		    % Temporary override
		    currentfont /Encoding get exch 1 exch put
		    currentpoint
		    gsave (\001) true charpath clip StippleText
		    grestore
	            (\001) stringwidth translate
		    moveto
		} ifelse
	    } forall
	    grestore 
	} {cstringshow} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
1 1 scale
4 -336 translate
-363 673 moveto 355 673 lineto 355 0 lineto -363 0 lineto closepath clip newpath
gsave
grestore
gsave
58 380 moveto
58 585 lineto
264 585 lineto
264 380 lineto
58 380 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
58 380 moveto
49 385 lineto
51 380 lineto
49 375 lineto
58 380 lineto
0.000 0.000 0.000 setrgbcolor AdjustColor
eofill
58 380 moveto
49 385 lineto
51 380 lineto
49 375 lineto
58 380 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
307.725083063531 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
306.568111958917 500.889529105343 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
303.115444770536 518.989044351323 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
297.421532122471 536.513105570384 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
289.576170418563 553.185347848735 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
279.703085699472 568.742839966131 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
267.957982409115 582.940230978286 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
254.526087842564 595.553619547828 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
239.619231000959 606.384085002142 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
223.472501921617 615.260824431206 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
206.340544167707 622.043846351519 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
188.493538947144 626.626178455414 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
170.212944193541 628.935554628262 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
151.787055806459 628.935554628262 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
133.506461052856 626.626178455414 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
115.659455832293 622.043846351519 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98.5274980783834 615.260824431206 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
82.3807689990412 606.384085002142 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
67.4739121574363 595.553619547828 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54.0420175908854 582.940230978286 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42.2969143005279 568.742839966131 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
32.4238295814372 553.185347848735 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24.5784678775286 536.513105570384 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
18.8845552294644 518.989044351323 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
15.4318880410832 500.889529105343 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
14.2749169364693 482.5 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
15.4318880410832 464.110470894657 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
18.8845552294644 446.010955648677 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
24.5784678775286 428.486894429615 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
32.4238295814373 411.814652151265 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
42.2969143005279 396.257160033868 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
54.0420175908854 382.059769021714 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
67.4739121574363 369.446380452172 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
82.3807689990413 358.615914997858 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
98.5274980783835 349.739175568794 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
115.659455832293 342.956153648481 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
133.506461052856 338.373821544586 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
151.787055806459 336.064445371738 moveto
161 482.5 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
170.212944193541 336.064445371738 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
188.493538947144 338.373821544586 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
206.340544167707 342.956153648481 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
223.472501921617 349.739175568794 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
239.619231000959 358.615914997858 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
254.526087842564 369.446380452172 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
267.957982409115 382.059769021714 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
279.703085699472 396.257160033869 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
289.576170418563 411.814652151265 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
297.421532122471 428.486894429616 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
303.115444770536 446.010955648677 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
161 482.5 moveto
306.568111958917 464.110470894657 lineto
1 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
1.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
grestore
gsave
grestore
gsave
306.568111958917 464.110470894657 moveto
297.568111958917 469.110470894657 lineto
299.568111958917 464.110470894657 lineto
297.568111958917 459.110470894657 lineto
306.568111958917 464.110470894657 lineto
0.000 1.000 0.000 setrgbcolor AdjustColor
eofill
306.568111958917 464.110470894657 moveto
297.568111958917 469.110470894657 lineto
299.568111958917 464.110470894657 lineto
297.568111958917 459.110470894657 lineto
306.568111958917 464.110470894657 lineto
1 setlinejoin 1 setlinecap
1 setlinewidth
[] 0 setdash
0.000 1.000 0.000 setrgbcolor AdjustColor
stroke
grestore
restore showpage

%%Trailer
end
%%EOF
